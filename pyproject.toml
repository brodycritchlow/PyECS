[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pyecs"
version = "0.1.0"
description = "A Python Entity Component System (ECS) implementation with runtime type safety"
readme = "README.md"
requires-python = ">=3.12"
license = "MIT"
authors = [
    {name = "Brody Critchlow", email = "brodycritchlow@gmail.com"},
]
keywords = ["ecs", "entity-component-system", "game-development", "beartype", "type-safety"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Typing :: Typed",
]
dependencies = [
    "beartype>=0.21.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "mypy>=1.0",
    "ruff>=0.1.0",
    "basedpyright>=1.0.0",
    "setuptools>=80.9.0",
]
docs = [
    "sphinx>=8.2.3",
    "sphinx-autodoc-typehints>=3.2.0",
    "sphinx-rtd-theme>=3.0.2",
    "myst-parser>=4.0.1",
    "sphinx_book_theme>=1.0.0",
    "sphinxcontrib-mermaid>=1.0.0"
]

[project.urls]
"Homepage" = "https://github.com/brodycritchlow/pyecs"
"Bug Tracker" = "https://github.com/brodycritchlow/pyecs/issues"

[tool.setuptools]
package-dir = {"pyecs" = "."}
packages = ["pyecs", "pyecs.common", "pyecs.containers", "pyecs.core", "pyecs.helpers", "pyecs.managers", "pyecs.processing", "pyecs.querying"]

[tool.ruff]
target-version = "py312"
line-length = 100
extend-exclude = ["docker/*", "typings/*"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "RUF", # Ruff-specific rules
]
ignore = [
    "E501", # line too long (handled by formatter)
    "UP004", # Class inherits from object (Python 3 default)
    "N999", # Invalid module name (we use PascalCase)
]

[tool.basedpyright]
pythonVersion = "3.13"
typeCheckingMode = "strict"
reportMissingImports = true
reportMissingTypeStubs = false
reportPrivateUsage = false
exclude = ["**/docker/**", "examples/**", "build/**", "dist/**", "*.egg-info/**"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
